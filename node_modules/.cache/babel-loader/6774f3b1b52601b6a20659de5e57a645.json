{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhakt\\\\OneDrive\\\\Desktop\\\\Netflix clone\\\\Netflix-Clone-ReactJS\\\\src\\\\Banner.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"./axios\";\nimport requests from \"./requests\";\nimport \"./Banner.css\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Banner() {\n  const [movie, setMovie] = useState({});\n  useEffect(() => {\n    async function fetchMovie() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length)]); // using prettier\n    }\n\n    fetchMovie();\n  }, []);\n  console.log(movie);\n  return /*#__PURE__*/React.createElement(\"header\", {\n    className: \"banner\",\n    style: {\n      backgroundSize: \"cover\",\n      backgroundImage: `url('${base_url}${movie === null || movie === void 0 ? void 0 : movie.backdrop_path}')`,\n      //optional chaining: no need to check if movie is undefined '?' saw this neat trick on stackoverflow\n      backgroundPosition: \"center center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"banner__contents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"banner__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, (movie === null || movie === void 0 ? void 0 : movie.name) || (movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.orginal_name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"banner__buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"banner__button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Play\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"banner__button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"More Info\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"banner__description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, movie === null || movie === void 0 ? void 0 : movie.overview)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"banner--fadeBottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Banner;","map":{"version":3,"sources":["C:/Users/bhakt/OneDrive/Desktop/Netflix clone/Netflix-Clone-ReactJS/src/Banner.js"],"names":["React","useEffect","useState","axios","requests","base_url","Banner","movie","setMovie","fetchMovie","request","get","fetchNetflixOriginals","data","results","Math","floor","random","length","console","log","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","name","title","orginal_name","overview"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,cAAP;AACA,MAAMC,QAAQ,GAAG,sCAAjB;;AAEA,SAASC,MAAT,GAAkB;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeQ,UAAf,GAA4B;AAC1B,YAAMC,OAAO,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAUP,QAAQ,CAACQ,qBAAnB,CAAtB;AACAJ,MAAAA,QAAQ,CACNE,OAAO,CAACG,IAAR,CAAaC,OAAb,CACEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,OAAO,CAACG,IAAR,CAAaC,OAAb,CAAqBI,MAAhD,CADF,CADM,CAAR,CAF0B,CAMvB;AACJ;;AACDT,IAAAA,UAAU;AACX,GAVQ,EAUN,EAVM,CAAT;AAWAU,EAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACA,sBACE;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,KAAK,EAAE;AACLc,MAAAA,cAAc,EAAE,OADX;AAELC,MAAAA,eAAe,EAAG,QAAOjB,QAAS,GAAEE,KAAnB,aAAmBA,KAAnB,uBAAmBA,KAAK,CAAEgB,aAAc,IAFpD;AAEyD;AAC9DC,MAAAA,kBAAkB,EAAE;AAHf,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG,CAAAjB,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEkB,IAAP,MAAelB,KAAf,aAAeA,KAAf,uBAAeA,KAAK,CAAEmB,KAAtB,MAA+BnB,KAA/B,aAA+BA,KAA/B,uBAA+BA,KAAK,CAAEoB,YAAtC,CAFH,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CALF,eASE;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCpB,KAApC,aAAoCA,KAApC,uBAAoCA,KAAK,CAAEqB,QAA3C,CATF,CARF,eAmBE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF;AAuBD;;AAED,eAAetB,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport \"./Banner.css\";\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState({});\r\n  useEffect(() => {\r\n    async function fetchMovie() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length)\r\n        ]\r\n      ); // using prettier\r\n    }\r\n    fetchMovie();\r\n  }, []);\r\n  console.log(movie);\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url('${base_url}${movie?.backdrop_path}')`, //optional chaining: no need to check if movie is undefined '?' saw this neat trick on stackoverflow\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n          {/* i notice that some movies give u a title a name or an orginal name , api information isnt consistent   */}\r\n          {movie?.name || movie?.title || movie?.orginal_name}\r\n        </h1>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">More Info</button>\r\n        </div>\r\n        <p className=\"banner__description\">{movie?.overview}</p>\r\n      </div>\r\n      <div className=\"banner--fadeBottom\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n"]},"metadata":{},"sourceType":"module"}